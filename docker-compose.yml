version: "3"

networks:
  elixirapp:
    driver: bridge

services:
  backend:
    container_name: iex-backend
    build:
      context: ./backend
      dockerfile: ../Dockerfile.backend
    volumes:
      - ./backend:/${BACKEND_SRC_PATH}
    environment:
      CHOKIDAR_USEPOLLING: true
      DANGEROUSLY_DISABLE_HOST_CHECK: true
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    stdin_open: true
    links:
      - postgres
    depends_on:
      - postgres
    restart: on-failure
    networks:
      - elixirapp

  postgres:
    container_name: iex-postgres
    image: postgres:latest
    ports:
      - ${DATABASE_PORT}:${DATABASE_PORT}
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    restart: on-failure
    volumes:
      - ./_dbdata:/var/lib/postgresql/data
      - ./_dbdump/dump.sql:/docker-entrypoint-initdb.d/1-init.sql
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -h localhost -p ${DATABASE_PORT} -U ${DATABASE_USER} -d ${DATABASE_NAME}",
        ]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - elixirapp
